@use "variables" as var;

// ------------------------------------------
// レスポンシブ表示切り替え用
// ------------------------------------------
@mixin devicePC {
	@media screen and (min-width: (var.$breakPoint + 1)) {
		@content;
	}
}
@mixin deviceSP {
	@media screen and (max-width: var.$breakPoint) {
		@content;
	}
}

//function
@function getVw($size, $viewport:1500) {
	$rate: 100 / $viewport;
	@return $rate * $size * 1vw;
}

// ------------------------------------------
// 三角形
// ------------------------------------------
@mixin triangle($direction: right, $size: 12, $color: gray){
	$set: left;

	@if $direction == left{
	$set: right;
	}@else if $direction == top{
	$set: bottom;
	}@else if $direction == bottom{
	$set: top;
	}@else{
	$set: left;
	}
	$size: round($size / 2);

	width: 0;
	height: 0;
	border: $size + px solid transparent;
	border-#{$set}-color: $color;
}

// ------------------------------------------
// 矢印　＞
// ------------------------------------------
@mixin arrow($width, $bold, $color, $deg) {
	border-style: solid;
	border-width: 0 #{$bold}px #{$bold}px 0;
	content: "";
	display: inline-block;
	position: absolute;
	height: #{$width}px;
	width: #{$width}px;
	border-color: #{$color};
	//角度
	@if ( $deg == "left" )        { transform: rotate(135deg); }
	@else if ( $deg == "top" )    { transform: rotate(225deg); }
	@else if ( $deg == "right" )  { transform: rotate(-45deg); }
	@else if ( $deg == "bottom" ) { transform: rotate(45deg);  }
	//SPの時
	@include deviceSP() {
		height: #{$width/2}px;
		width: #{$width/2}px;
	}
}

// ------------------------------------------
// 親要素に対して中央寄せ
// ------------------------------------------
@mixin centered {
	margin: 0 auto;
	position: relative;
	top: 50%;
	-webkit-transform: translateY(-50%);
	-ms-transform: translateY(-50%);
	transform: translateY(-50%);
}

// ------------------------------------------
// ウィンドウ幅のブロック
// ------------------------------------------
@mixin full-width(){
	margin-left: calc((100vw - 100%) / -2);
	margin-right: calc((100vw - 100%) / -2);
	max-width: auto; // IE対策
	max-width: initial;
}

// ------------------------------------------
// ■flexセット（等間隔用）
// $col：PCカラム数
// $marginH：PCマージン横
// $marginV：PCマージン縦
// $spcol：SPカラム数
// $spmarginH：SPマージン横（未設定時はPCと共通）
// $spmarginV：SPマージン縦（未設定時はPCと共通）
// ------------------------------------------
@mixin flex-set($col: 2, $marginH: 0, $marginV: 0, $spcol: 1, $spmarginH: null, $spmarginV: null) {
	display: flex;
	padding: 0;
	margin: 0;
	list-style: none;
	flex-wrap: wrap;
	& > * {
		@if ( $spmarginH == null ){
			$spmarginH: $marginH;
		}
		@if ( $spmarginV == null ){
			$spmarginV: $marginV;
		}
		$colplus: $col + 1;
		$margintotal: $marginH * ($col - 1);
		width: calc((99.9% - #{$margintotal}px) / #{$col});
		margin-right: #{$marginH}px;
		&:nth-child(#{$col}n) {
			margin-right: 0;
		}
		&:nth-child(n + #{$colplus}) {
			margin-top: #{$marginV}px;
		}
		&:last-child {
			margin-right: 0;
		}
		@if ( $spcol == 1 ){
			@include deviceSP {
				width: 100%;
				margin-right: 0;
				&:nth-child(n + 2) {
					margin-top: #{$spmarginV}px;
				}
			}
		} @else {
			@include deviceSP {
				$colplus: $spcol + 1;
				$margintotal: $spmarginH * ($spcol - 1);
				width: calc((99.9% - #{$margintotal}px) / #{$spcol});
				margin-right: #{$spmarginH}px;
				&:nth-child(#{$col}n) {
					margin-right: #{$spmarginH}px;
				}
				&:nth-child(#{$spcol}n) {
					margin-right: 0;
				}
				&:nth-child(n + #{$colplus}) {
					margin-top: #{$spmarginV}px;
				}
				&:last-child {
					margin-right: 0;
				}
			}
		}
	}
}

// ------------------------------------------
// ■flexセット（2カラム）
// $leftW：左カラム幅
// $rightW：右カラム幅
// $align：垂直揃え位置
// $spchange：SP時順序入れ替え
// $sp1col：SP時1カラムにするか
// ------------------------------------------
@mixin flex-2col($leftW: 48%, $rightW: 48%, $align: 'stretch', $spchange: false, $sp1col: true) {
	display: flex;
	justify-content: space-between;
	align-items: #{$align};
	& > *:first-child {
		width: #{$leftW};
	}
	& > *:last-child {
		width: #{$rightW};
	}
	@if ( $sp1col == true ){
		@include deviceSP {
			flex-wrap: wrap;
			& > * {
				width: 100%!important;
			}
		}
		@if ( $spchange == true ){
			@include deviceSP {
				& > *:first-child {
					order: 2;
				}
			}
		}
	}
}
